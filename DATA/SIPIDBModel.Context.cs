//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SIPIDBEntities : DbContext
    {
        public SIPIDBEntities()
            : base("name=SIPIDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ACCOUNT_TYPE> ACCOUNT_TYPE { get; set; }
        public DbSet<ADD_STUDENT> ADD_STUDENT { get; set; }
        public DbSet<ADMISSIONINFO> ADMISSIONINFOes { get; set; }
        public DbSet<ADMISSIONOFFICE> ADMISSIONOFFICEs { get; set; }
        public DbSet<ALL_ACCOUNT_TYPE> ALL_ACCOUNT_TYPE { get; set; }
        public DbSet<BALANCE_SHEET_CONFIGURE> BALANCE_SHEET_CONFIGURE { get; set; }
        public DbSet<BATCH> BATCHes { get; set; }
        public DbSet<BLOODGROUP> BLOODGROUPs { get; set; }
        public DbSet<BOOK_ISSUE> BOOK_ISSUE { get; set; }
        public DbSet<BOOKS_DETAILS> BOOKS_DETAILS { get; set; }
        public DbSet<CAMPUSINFO> CAMPUSINFOes { get; set; }
        public DbSet<CHART_ACCOUNT> CHART_ACCOUNT { get; set; }
        public DbSet<CLASSPERIOD> CLASSPERIODs { get; set; }
        public DbSet<COMPANY_SETUP> COMPANY_SETUP { get; set; }
        public DbSet<COURSE> COURSEs { get; set; }
        public DbSet<COURSE_ASSIGN_TO_STUDENT> COURSE_ASSIGN_TO_STUDENT { get; set; }
        public DbSet<COURSE_ENTRY> COURSE_ENTRY { get; set; }
        public DbSet<CREATE_ROUTINE> CREATE_ROUTINE { get; set; }
        public DbSet<CUSTOMER_EMPLOYEE_SETUP> CUSTOMER_EMPLOYEE_SETUP { get; set; }
        public DbSet<DAY> DAYs { get; set; }
        public DbSet<DEPARTMENT> DEPARTMENTs { get; set; }
        public DbSet<DEPOSIT_PAYMENT> DEPOSIT_PAYMENT { get; set; }
        public DbSet<DEPRICIATION> DEPRICIATIONs { get; set; }
        public DbSet<DEPRICIATION_SETUP> DEPRICIATION_SETUP { get; set; }
        public DbSet<DISTRICT> DISTRICTs { get; set; }
        public DbSet<FEES_ASSIGN_BY_CLASS> FEES_ASSIGN_BY_CLASS { get; set; }
        public DbSet<FEESDETAIL> FEESDETAILS { get; set; }
        public DbSet<FEESSETUP> FEESSETUPs { get; set; }
        public DbSet<FISCAL_YEAR> FISCAL_YEAR { get; set; }
        public DbSet<GS_tblCategory> GS_tblCategory { get; set; }
        public DbSet<INCOME_SHEET_CONFIGURE> INCOME_SHEET_CONFIGURE { get; set; }
        public DbSet<INVENTORY_BRAND_CATEGORY> INVENTORY_BRAND_CATEGORY { get; set; }
        public DbSet<INVENTORY_BRAND_NAME> INVENTORY_BRAND_NAME { get; set; }
        public DbSet<INVENTORY_PRODUCT_MASTER_ENTRY_INVENTORY> INVENTORY_PRODUCT_MASTER_ENTRY_INVENTORY { get; set; }
        public DbSet<INVENTORY_PURCHAGE_DETAILS> INVENTORY_PURCHAGE_DETAILS { get; set; }
        public DbSet<INVENTORY_PURCHASE_ENTRY> INVENTORY_PURCHASE_ENTRY { get; set; }
        public DbSet<INVENTORY_STOCK_OUT> INVENTORY_STOCK_OUT { get; set; }
        public DbSet<INVENTORY_STOCKOUT_DETAILS> INVENTORY_STOCKOUT_DETAILS { get; set; }
        public DbSet<INVENTORY_UNIT_TYPE> INVENTORY_UNIT_TYPE { get; set; }
        public DbSet<JOURNAL_TRANSACTION_TYPE> JOURNAL_TRANSACTION_TYPE { get; set; }
        public DbSet<JOURNAL_VOUCHAR> JOURNAL_VOUCHAR { get; set; }
        public DbSet<LMS_tblCompany> LMS_tblCompany { get; set; }
        public DbSet<MEMBER_ACC_TYPE> MEMBER_ACC_TYPE { get; set; }
        public DbSet<MEMBER_ASSIGN> MEMBER_ASSIGN { get; set; }
        public DbSet<MEMBER_INFO> MEMBER_INFO { get; set; }
        public DbSet<MODULE_PERMISSION> MODULE_PERMISSION { get; set; }
        public DbSet<ONLINEDEPARTMENT> ONLINEDEPARTMENTs { get; set; }
        public DbSet<ONLINEEXAM> ONLINEEXAMs { get; set; }
        public DbSet<ORGANIZATION_INFO> ORGANIZATION_INFO { get; set; }
        public DbSet<PIS_tblBloodGroup> PIS_tblBloodGroup { get; set; }
        public DbSet<PIS_tblCategory> PIS_tblCategory { get; set; }
        public DbSet<PIS_tblCategoryEmp> PIS_tblCategoryEmp { get; set; }
        public DbSet<PIS_tblCategorySalary> PIS_tblCategorySalary { get; set; }
        public DbSet<PIS_tblCountry> PIS_tblCountry { get; set; }
        public DbSet<PIS_tblDepartment> PIS_tblDepartment { get; set; }
        public DbSet<PIS_tblDesignationInfo> PIS_tblDesignationInfo { get; set; }
        public DbSet<PIS_tblDistrictInfo> PIS_tblDistrictInfo { get; set; }
        public DbSet<PIS_tblDivision> PIS_tblDivision { get; set; }
        public DbSet<PIS_tblEmpAssignment> PIS_tblEmpAssignment { get; set; }
        public DbSet<PIS_tblEmpEducationInfo> PIS_tblEmpEducationInfo { get; set; }
        public DbSet<PIS_tblEmpFamily> PIS_tblEmpFamily { get; set; }
        public DbSet<PIS_tblEmployeeGenInfo> PIS_tblEmployeeGenInfo { get; set; }
        public DbSet<PIS_tblGender> PIS_tblGender { get; set; }
        public DbSet<PIS_tblGradeInfo> PIS_tblGradeInfo { get; set; }
        public DbSet<PIS_tblJobStatus> PIS_tblJobStatus { get; set; }
        public DbSet<PIS_tblMaritalStatus> PIS_tblMaritalStatus { get; set; }
        public DbSet<PIS_tblReligion> PIS_tblReligion { get; set; }
        public DbSet<PIS_tblSection> PIS_tblSection { get; set; }
        public DbSet<PIS_tblWorkTimeScheduleSetup> PIS_tblWorkTimeScheduleSetup { get; set; }
        public DbSet<POST> POSTs { get; set; }
        public DbSet<PROGRAM> PROGRAMs { get; set; }
        public DbSet<RELIGION> RELIGIONs { get; set; }
        public DbSet<ROLEWISE_MENU> ROLEWISE_MENU { get; set; }
        public DbSet<ROUTINEGROUP> ROUTINEGROUPs { get; set; }
        public DbSet<SCHOOL_FEES_COLLECTION> SCHOOL_FEES_COLLECTION { get; set; }
        public DbSet<SCHOOL_MARKS_DISTRIBUTION> SCHOOL_MARKS_DISTRIBUTION { get; set; }
        public DbSet<SEMESTER> SEMESTERs { get; set; }
        public DbSet<SIPI_DEPARTMENT> SIPI_DEPARTMENT { get; set; }
        public DbSet<SIPI_PROGRAM> SIPI_PROGRAM { get; set; }
        public DbSet<STUDENT_ATTENDENCE> STUDENT_ATTENDENCE { get; set; }
        public DbSet<STUDENT_CURRENT_SEMESTER_STATUS> STUDENT_CURRENT_SEMESTER_STATUS { get; set; }
        public DbSet<STUDENT_RESULT> STUDENT_RESULT { get; set; }
        public DbSet<STUDENTFEE> STUDENTFEES { get; set; }
        public DbSet<STUDENTFEESCOLLECTION> STUDENTFEESCOLLECTIONs { get; set; }
        public DbSet<tblCfgCommon> tblCfgCommons { get; set; }
        public DbSet<tblCfgCommonType> tblCfgCommonTypes { get; set; }
        public DbSet<tblFactory> tblFactories { get; set; }
        public DbSet<TEACHER> TEACHERs { get; set; }
        public DbSet<TEMPORARY_DATA_SET> TEMPORARY_DATA_SET { get; set; }
        public DbSet<test_district> test_district { get; set; }
        public DbSet<THANA> THANAs { get; set; }
        public DbSet<USER> USERs { get; set; }
        public DbSet<USER_GROUP> USER_GROUP { get; set; }
        public DbSet<YEAR> YEARs { get; set; }
        public DbSet<PIS_EMPLOYEE_INFO> PIS_EMPLOYEE_INFO { get; set; }
    
        public virtual ObjectResult<SP_ACCOUNT_STATEMENT_Result> SP_ACCOUNT_STATEMENT(Nullable<long> accountId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACCOUNT_STATEMENT_Result>("SP_ACCOUNT_STATEMENT", accountIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_BANK_STATEMENT_Result> SP_BANK_STATEMENT(Nullable<long> accountId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BANK_STATEMENT_Result>("SP_BANK_STATEMENT", accountIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_CHART_OF_ACCOUNT_UPDATE(Nullable<long> cHART_ACC_ID, string cHART_ACC_STATUS)
        {
            var cHART_ACC_IDParameter = cHART_ACC_ID.HasValue ?
                new ObjectParameter("CHART_ACC_ID", cHART_ACC_ID) :
                new ObjectParameter("CHART_ACC_ID", typeof(long));
    
            var cHART_ACC_STATUSParameter = cHART_ACC_STATUS != null ?
                new ObjectParameter("CHART_ACC_STATUS", cHART_ACC_STATUS) :
                new ObjectParameter("CHART_ACC_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHART_OF_ACCOUNT_UPDATE", cHART_ACC_IDParameter, cHART_ACC_STATUSParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_CURRENT_BALANCE_Result> SP_CURRENT_BALANCE(Nullable<long> pJV_ACCOUNT_ID, Nullable<System.DateTime> pDateTo)
        {
            var pJV_ACCOUNT_IDParameter = pJV_ACCOUNT_ID.HasValue ?
                new ObjectParameter("pJV_ACCOUNT_ID", pJV_ACCOUNT_ID) :
                new ObjectParameter("pJV_ACCOUNT_ID", typeof(long));
    
            var pDateToParameter = pDateTo.HasValue ?
                new ObjectParameter("pDateTo", pDateTo) :
                new ObjectParameter("pDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CURRENT_BALANCE_Result>("SP_CURRENT_BALANCE", pJV_ACCOUNT_IDParameter, pDateToParameter);
        }
    
        public virtual ObjectResult<SP_CURRENT_BALANCE_REVENUE_EXPENSE_Result> SP_CURRENT_BALANCE_REVENUE_EXPENSE(Nullable<long> pJV_ACCOUNT_ID, Nullable<System.DateTime> pDateFrom, Nullable<System.DateTime> pDateTo)
        {
            var pJV_ACCOUNT_IDParameter = pJV_ACCOUNT_ID.HasValue ?
                new ObjectParameter("pJV_ACCOUNT_ID", pJV_ACCOUNT_ID) :
                new ObjectParameter("pJV_ACCOUNT_ID", typeof(long));
    
            var pDateFromParameter = pDateFrom.HasValue ?
                new ObjectParameter("pDateFrom", pDateFrom) :
                new ObjectParameter("pDateFrom", typeof(System.DateTime));
    
            var pDateToParameter = pDateTo.HasValue ?
                new ObjectParameter("pDateTo", pDateTo) :
                new ObjectParameter("pDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CURRENT_BALANCE_REVENUE_EXPENSE_Result>("SP_CURRENT_BALANCE_REVENUE_EXPENSE", pJV_ACCOUNT_IDParameter, pDateFromParameter, pDateToParameter);
        }
    
        public virtual ObjectResult<SP_CURRENT_DEBIT_CREDIT_Result> SP_CURRENT_DEBIT_CREDIT(Nullable<long> aCC_ID, Nullable<System.DateTime> fISCALYEAR, Nullable<System.DateTime> pJD_DATE)
        {
            var aCC_IDParameter = aCC_ID.HasValue ?
                new ObjectParameter("ACC_ID", aCC_ID) :
                new ObjectParameter("ACC_ID", typeof(long));
    
            var fISCALYEARParameter = fISCALYEAR.HasValue ?
                new ObjectParameter("FISCALYEAR", fISCALYEAR) :
                new ObjectParameter("FISCALYEAR", typeof(System.DateTime));
    
            var pJD_DATEParameter = pJD_DATE.HasValue ?
                new ObjectParameter("pJD_DATE", pJD_DATE) :
                new ObjectParameter("pJD_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CURRENT_DEBIT_CREDIT_Result>("SP_CURRENT_DEBIT_CREDIT", aCC_IDParameter, fISCALYEARParameter, pJD_DATEParameter);
        }
    
        public virtual ObjectResult<SP_CURRENT_DEBIT_CREDIT_DEPRICIATION_Result> SP_CURRENT_DEBIT_CREDIT_DEPRICIATION(Nullable<long> aCC_ID)
        {
            var aCC_IDParameter = aCC_ID.HasValue ?
                new ObjectParameter("ACC_ID", aCC_ID) :
                new ObjectParameter("ACC_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CURRENT_DEBIT_CREDIT_DEPRICIATION_Result>("SP_CURRENT_DEBIT_CREDIT_DEPRICIATION", aCC_IDParameter);
        }
    
        public virtual ObjectResult<SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE_Result> SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE_Result>("SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BY_DATE_Result> SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BY_DATE_Result>("SP_DEBIT_CREDIT_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual int SP_DELETE_DEPRICIATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_DEPRICIATION");
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GET_ALL_DEPRICIATION_Result> SP_GET_ALL_DEPRICIATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ALL_DEPRICIATION_Result>("SP_GET_ALL_DEPRICIATION");
        }
    
        public virtual ObjectResult<SP_GET_DEPRICIATION_ALL_Result> SP_GET_DEPRICIATION_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DEPRICIATION_ALL_Result>("SP_GET_DEPRICIATION_ALL");
        }
    
        public virtual ObjectResult<SP_GET_DEPRICIATION_DATE_WISE_Result> SP_GET_DEPRICIATION_DATE_WISE(Nullable<System.DateTime> sTARTDATE, Nullable<System.DateTime> eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE.HasValue ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(System.DateTime));
    
            var eNDDATEParameter = eNDDATE.HasValue ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DEPRICIATION_DATE_WISE_Result>("SP_GET_DEPRICIATION_DATE_WISE", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_JVID_WITHOUT_BANK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_JVID_WITHOUT_BANK");
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_GET_NET_INCOME_LOSS(Nullable<System.DateTime> fISCALYEAR, Nullable<System.DateTime> pJD_DATE)
        {
            var fISCALYEARParameter = fISCALYEAR.HasValue ?
                new ObjectParameter("FISCALYEAR", fISCALYEAR) :
                new ObjectParameter("FISCALYEAR", typeof(System.DateTime));
    
            var pJD_DATEParameter = pJD_DATE.HasValue ?
                new ObjectParameter("pJD_DATE", pJD_DATE) :
                new ObjectParameter("pJD_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_GET_NET_INCOME_LOSS", fISCALYEARParameter, pJD_DATEParameter);
        }
    
        public virtual ObjectResult<SP_HEADER_ACC_NAME_Result> SP_HEADER_ACC_NAME()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HEADER_ACC_NAME_Result>("SP_HEADER_ACC_NAME");
        }
    
        public virtual ObjectResult<SP_HEADER_STATEMENT_Result> SP_HEADER_STATEMENT(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HEADER_STATEMENT_Result>("SP_HEADER_STATEMENT", accountIdParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_INCOME_STATEMENT_FINAL_Result> SP_INCOME_STATEMENT_FINAL(Nullable<System.DateTime> fisStartDate, Nullable<System.DateTime> pJD_DATE)
        {
            var fisStartDateParameter = fisStartDate.HasValue ?
                new ObjectParameter("FisStartDate", fisStartDate) :
                new ObjectParameter("FisStartDate", typeof(System.DateTime));
    
            var pJD_DATEParameter = pJD_DATE.HasValue ?
                new ObjectParameter("pJD_DATE", pJD_DATE) :
                new ObjectParameter("pJD_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_INCOME_STATEMENT_FINAL_Result>("SP_INCOME_STATEMENT_FINAL", fisStartDateParameter, pJD_DATEParameter);
        }
    
        public virtual ObjectResult<SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE_Result> SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE_Result>("SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE_Result> SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE_Result>("SP_JOURNAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual ObjectResult<string> SP_JOURNAL_VOUCHAR_LAST_ID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_JOURNAL_VOUCHAR_LAST_ID");
        }
    
        public virtual ObjectResult<SP_RECEIVE_PAYMENT_Result> SP_RECEIVE_PAYMENT(Nullable<System.DateTime> pFromDate, Nullable<System.DateTime> pToDate, string pParentType)
        {
            var pFromDateParameter = pFromDate.HasValue ?
                new ObjectParameter("pFromDate", pFromDate) :
                new ObjectParameter("pFromDate", typeof(System.DateTime));
    
            var pToDateParameter = pToDate.HasValue ?
                new ObjectParameter("pToDate", pToDate) :
                new ObjectParameter("pToDate", typeof(System.DateTime));
    
            var pParentTypeParameter = pParentType != null ?
                new ObjectParameter("pParentType", pParentType) :
                new ObjectParameter("pParentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RECEIVE_PAYMENT_Result>("SP_RECEIVE_PAYMENT", pFromDateParameter, pToDateParameter, pParentTypeParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_CONTRA_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_DEPOSIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_DEPOSIT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_DEPOSIT_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_DEPOSIT_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_JOURNAL_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_JOURNAL_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_JOURNAL_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_JOURNAL_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_PAYMENT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE(Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_Date)
        {
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("From_Date", from_Date) :
                new ObjectParameter("From_Date", typeof(System.DateTime));
    
            var to_DateParameter = to_Date.HasValue ?
                new ObjectParameter("To_Date", to_Date) :
                new ObjectParameter("To_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_PAYMENT_VOUCHER_FOR_DAY_BOOK_BETWEEN_DATE", from_DateParameter, to_DateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_TOTAL_PAYMENT_VOUCHER_FOR_DAY_BOOK_BY_DATE(Nullable<System.DateTime> journal_Date)
        {
            var journal_DateParameter = journal_Date.HasValue ?
                new ObjectParameter("Journal_Date", journal_Date) :
                new ObjectParameter("Journal_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_TOTAL_PAYMENT_VOUCHER_FOR_DAY_BOOK_BY_DATE", journal_DateParameter);
        }
    
        public virtual ObjectResult<SP_TRIAL_BALANCE_Result> SP_TRIAL_BALANCE(Nullable<System.DateTime> fiscalStartDate, Nullable<System.DateTime> pJD_DATE)
        {
            var fiscalStartDateParameter = fiscalStartDate.HasValue ?
                new ObjectParameter("FiscalStartDate", fiscalStartDate) :
                new ObjectParameter("FiscalStartDate", typeof(System.DateTime));
    
            var pJD_DATEParameter = pJD_DATE.HasValue ?
                new ObjectParameter("pJD_DATE", pJD_DATE) :
                new ObjectParameter("pJD_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TRIAL_BALANCE_Result>("SP_TRIAL_BALANCE", fiscalStartDateParameter, pJD_DATEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Student_Money_Receipt_Report_Result> Student_Money_Receipt_Report(Nullable<int> studentId, Nullable<int> semesterId, Nullable<int> year, Nullable<System.DateTime> date)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var semesterIdParameter = semesterId.HasValue ?
                new ObjectParameter("semesterId", semesterId) :
                new ObjectParameter("semesterId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student_Money_Receipt_Report_Result>("Student_Money_Receipt_Report", studentIdParameter, semesterIdParameter, yearParameter, dateParameter);
        }
    
        public virtual int UpdateStudentPaymentAmount(Nullable<int> studentId, Nullable<int> semesterId, Nullable<int> year, Nullable<int> paidAmount, Nullable<int> dueAmount)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var semesterIdParameter = semesterId.HasValue ?
                new ObjectParameter("semesterId", semesterId) :
                new ObjectParameter("semesterId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(int));
    
            var dueAmountParameter = dueAmount.HasValue ?
                new ObjectParameter("DueAmount", dueAmount) :
                new ObjectParameter("DueAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentPaymentAmount", studentIdParameter, semesterIdParameter, yearParameter, paidAmountParameter, dueAmountParameter);
        }
    }
}
